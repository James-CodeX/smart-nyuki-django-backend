# Generated by Django 5.2.1 on 2025-07-02 14:21

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apiaries', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SmartDevices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('device_type', models.CharField(max_length=50)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('battery_level', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='smart_devices', to='apiaries.hives')),
            ],
            options={
                'verbose_name': 'Smart Device',
                'verbose_name_plural': 'Smart Devices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SensorReadings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('humidity', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=6)),
                ('sound_level', models.IntegerField(blank=True, null=True)),
                ('battery_level', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_readings', to='devices.smartdevices')),
            ],
            options={
                'verbose_name': 'Sensor Reading',
                'verbose_name_plural': 'Sensor Readings',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DeviceImages',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_path', models.TextField()),
                ('captured_at', models.DateTimeField()),
                ('image_type', models.CharField(choices=[('Routine', 'Routine'), ('Alert-Triggered', 'Alert-Triggered'), ('Manual', 'Manual')], default='Routine', max_length=20)),
                ('upload_status', models.CharField(choices=[('Pending', 'Pending'), ('Uploaded', 'Uploaded'), ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('analysis_status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Completed', 'Completed'), ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('is_analyzed', models.BooleanField(default=False)),
                ('analysis_results', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_images', to='devices.smartdevices')),
            ],
            options={
                'verbose_name': 'Device Image',
                'verbose_name_plural': 'Device Images',
                'ordering': ['-captured_at'],
            },
        ),
        migrations.CreateModel(
            name='AudioRecordings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_path', models.TextField()),
                ('duration', models.IntegerField(help_text='Duration in seconds')),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('recorded_at', models.DateTimeField()),
                ('upload_status', models.CharField(choices=[('Pending', 'Pending'), ('Uploaded', 'Uploaded'), ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('analysis_status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Completed', 'Completed'), ('Failed', 'Failed')], default='Pending', max_length=20)),
                ('is_analyzed', models.BooleanField(default=False)),
                ('analysis_results', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_recordings', to='devices.smartdevices')),
            ],
            options={
                'verbose_name': 'Audio Recording',
                'verbose_name_plural': 'Audio Recordings',
                'ordering': ['-recorded_at'],
            },
        ),
    ]
